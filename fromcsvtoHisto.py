from csv import DictReader
import ROOT
from helper import *

csv_path =  "S_50_0.csv"

h_truth = ROOT.TH1F("h_truth","",50,0.,1000)
h_pred = ROOT.TH1F("h_pred","",50,0.,1000)

with open(csv_path, 'r') as read_obj:
    csv_dict_reader = DictReader(read_obj)
    for row in csv_dict_reader:
        print(row['Labels'], row['y_pred'],row["Photon_pt"])
	if row['Labels'] == '0': h_truth.Fill(float(row["Photon_pt"]))
	if row['y_pred'] == '0': h_pred.Fill(float(row["Photon_pt"]))


ROOT.gStyle.SetOptStat(0)

cb = ROOT.TCanvas("cb","cb",564,232,600,600)
cb.SetHighLightColor(2)
cb.Range(0,0,1,1)
cb.SetFillColor(0)
cb.SetBorderMode(0)
cb.SetBorderSize(2)
cb.SetTickx(1)
cb.SetTicky(1)
cb.SetLeftMargin(0.18)
cb.SetRightMargin(0.04)
cb.SetTopMargin(0.05)
cb.SetBottomMargin(0.13)
cb.SetFrameFillStyle(0)
cb.SetFrameBorderMode(0)
cb.SetFrameFillStyle(0)
cb.cd()

leg = ROOT.TLegend(0.6,0.65,0.93,0.925)
leg.SetBorderSize(1)

Pad1 = ROOT.TPad("Pad1", "Pad1", 0,0.31,1,1)
Pad1.Draw()
Pad1.cd()
#Pad1.Range(-0.7248462,-1.30103,3.302077,3.159352)
Pad1.SetFillColor(0)
Pad1.SetBorderMode(0)
Pad1.SetBorderSize(2)
Pad1.SetLogy()
Pad1.SetTickx(1)
Pad1.SetTicky(1)
Pad1.SetLeftMargin(0.18)
Pad1.SetRightMargin(0.04)
Pad1.SetTopMargin(0.055)
Pad1.SetBottomMargin(0)
Pad1.SetFrameFillStyle(0)
Pad1.SetFrameBorderMode(0)
Pad1.SetFrameFillStyle(0)
Pad1.SetFrameBorderMode(0)
Pad1.SetLogy()
ROOT.gStyle.SetErrorX(.5)
Set_axis_pad1(h_truth)
h_truth.SetLineColor(ROOT.kBlack)
h_truth.GetYaxis().SetTitle("MC Events")
h_truth.Draw("Histo")
leg.AddEntry(h_truth, "QCD MC Truth","L")
h_pred.SetLineColor(ROOT.kRed)
h_pred.GetYaxis().SetTitle("MC Events")
h_pred.Draw("Histo Same")
leg.AddEntry(h_pred, "QCD MC Pred","L")

leg.SetFillColor(0)
leg.SetLineColor(0)
leg.Draw()
Draw_CMS_header(lumi_label="",CMS_Tag="Project Work")
Pad1.RedrawAxis()
cb.cd()
Pad2 = ROOT.TPad("Pad2", "Pad2",  0, 0, 1, 0.31)
Pad2.Draw()
Pad2.cd()
#Pad2.Range(-0.7248462,-0.8571429,3.302077,2)
Pad2.SetFillColor(0)
Pad2.SetFillStyle(4000)
Pad2.SetBorderMode(0)
Pad2.SetBorderSize(2)
Pad2.SetTickx(1)
Pad2.SetTicky(1)
Pad2.SetLeftMargin(0.18)
Pad2.SetRightMargin(0.04)
Pad2.SetTopMargin(0)
Pad2.SetBottomMargin(0.3)
Pad2.SetFrameFillStyle(0)
Pad2.SetFrameBorderMode(0)
Pad2.SetFrameFillStyle(0)
Pad2.SetFrameBorderMode(0)
Func = ROOT.TF1('Func',"[0]",0,1000)
Func.SetParameter(0,1)
Func.SetLineColor(58)
Func.SetLineWidth(2)
h_ratio = h_truth.Clone('h_ratio')
h_ratio.Sumw2()
h_ratio.SetStats(0)
h_ratio.Divide(h_pred)
h_ratio.SetMaximum(2)
h_ratio.SetMinimum(0.01)
h_ratio.SetMarkerStyle(20)
h_ratio.SetMarkerSize(1.1)
h_ratio.SetMarkerColor(ROOT.kBlack)
h_ratio.SetTitle("")
Set_axis_pad2(h_ratio)
h_ratio.GetYaxis().SetTitle("Truth/Prediction")
h_ratio.GetXaxis().SetTitle("Photon p_{T}")
h_ratio.Draw("E1")
Func.Draw("same")
h_ratio.Draw("E1 Same")
cb.cd()
cb.Draw()
cb.SaveAs("Signal_0b.pdf")
#cb.SaveAs("/eos/user/e/ecasilar/SMPVJ_Gamma_BJETS/DeepLearning/DL_Plots/Photon_pt_PredTrue.png")
#cb.SaveAs("/eos/user/e/ecasilar/SMPVJ_Gamma_BJETS/DeepLearning/DL_Plots/Photon_pt_PredTrue.root")
#cb.SaveAs("/eos/user/e/ecasilar/SMPVJ_Gamma_BJETS/DeepLearning/DL_Plots/Photon_pt_PredTrue.pdf")
cb.Clear()
